{"version":3,"file":"bundle.js","sources":["../src/index.ts"],"sourcesContent":["import { MessageBot } from '@bhmb/bot'\nimport { UIExtensionExports } from '@bhmb/ui'\nimport { WorldInfo, WorldLists } from 'blockheads-api-interface'\n\nimport step1Html from './step1.html'\nimport step2Html from './step2.html'\nimport step3Html from './step3.html'\n\ninterface SortSettings {\n  alphabetical: boolean\n  removeDuplicates: boolean\n}\n\ninterface PushSettings {\n  mode: 'overwrite' | 'append'\n}\n\nconst pluck = <T, K extends keyof T>(arr: T[], key: K): Array<T[K]> => arr.map(item => item[key])\nconst flatten = <T>(arr: T[][]): T[] => arr.reduce((carry, item) => carry.concat(item), [])\n\nasync function getWorldLists(world: WorldInfo) {\n  const api = new MessageBot.dependencies.Api(world)\n  let overview = await api.getOverview()\n  while (overview.status !== 'online') {\n    await api.start()\n    overview = await api.getOverview()\n  }\n  return api.getLists()\n}\n\nfunction unique(arr: string[]) {\n  return [...new Set(arr)]\n}\n\nasync function createUI(list: keyof WorldLists, tab: HTMLDivElement, ui: UIExtensionExports) {\n  // Show worlds\n  const { worlds, settings } = await showWorlds(tab, ui)\n\n  // Get the lists and modify as required\n  ui.notify('Getting lists')\n  const lists = await Promise.all(worlds.map(getWorldLists))\n  let superList = flatten(pluck(lists, list))\n  if (settings.alphabetical) superList.sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n  if (settings.removeDuplicates) superList = unique(superList)\n\n  // Let the user edit the list\n  superList = await displayList(tab, superList)\n\n  // Choose which worlds to push the new list to\n  const { worlds: pushWorlds, settings: pushSettings } = await choosePushWorlds(tab, ui)\n  ui.notify('Pushing lists...')\n  const requests = pushWorlds.map(async world => {\n    const api = new MessageBot.dependencies.Api(world)\n    const lists = await getWorldLists(world)\n    pushSettings.mode == 'overwrite' ? lists[list] = superList : lists[list].push(...superList)\n    await api.setLists(lists)\n  })\n\n  await Promise.all(requests)\n  setTimeout(createUI, 1, list, tab, ui)\n}\n\n// Todo: Extract the common functionality in showWorlds / choosePushWorlds into a helper function\n\nasync function showWorlds(tab: HTMLDivElement, ui: UIExtensionExports): Promise<{worlds: WorldInfo[], settings: SortSettings}> {\n  const worlds = await MessageBot.dependencies.getWorlds()\n  tab.innerHTML = step1Html\n  const worldsDiv = tab.querySelector('.worlds') as HTMLDivElement\n  const template = tab.querySelector('template') as HTMLTemplateElement\n  worlds.forEach(world => {\n    ui.buildTemplate(template, worldsDiv, [\n      { selector: '[data-for=worldId]', value: world.id },\n      { selector: '[data-for=worldName]', text: world.name }\n    ])\n  })\n\n  return new Promise <{ worlds: WorldInfo[], settings: SortSettings }>(resolve => {\n    const button = tab.querySelector('.button') as HTMLElement\n    button.addEventListener('click', () => {\n      const ids = Array.from(worldsDiv.querySelectorAll('input'))\n        .filter(input => input.checked)\n        .map(input => input.value)\n\n      if (ids.length < 1) {\n        ui.notify('Please select at least one world')\n        return\n      }\n\n      const settings: SortSettings = {\n        alphabetical: (tab.querySelector('[name=alphabeta]') as HTMLInputElement).checked,\n        removeDuplicates: (tab.querySelector('[name=duplicates]') as HTMLInputElement).checked,\n      }\n\n      resolve({ worlds: worlds.filter(({id}) => ids.includes(id)), settings })\n    })\n  })\n}\n\nfunction displayList(tab: HTMLDivElement, list: string[]): Promise<string[]> {\n  tab.innerHTML = step2Html\n  const textarea = tab.querySelector('textarea') as HTMLTextAreaElement\n  const button = tab.querySelector('.button') as HTMLElement\n  textarea.textContent = list.join('\\n')\n  return new Promise<string[]>(resolve => {\n    button.addEventListener('click', () => resolve(textarea.value.split(/\\r?\\n/)))\n  })\n}\n\nasync function choosePushWorlds(tab: HTMLDivElement, ui: UIExtensionExports): Promise<{worlds: WorldInfo[], settings: PushSettings }> {\n  tab.innerHTML = step3Html\n  const worlds = await MessageBot.dependencies.getWorlds()\n  const worldsDiv = tab.querySelector('.worlds') as HTMLDivElement\n  const template = tab.querySelector('template') as HTMLTemplateElement\n  worlds.forEach(world => {\n    ui.buildTemplate(template, worldsDiv, [\n      { selector: '[data-for=worldId]', value: world.id },\n      { selector: '[data-for=worldName]', text: world.name }\n    ])\n  })\n\n  return new Promise<{ worlds: WorldInfo[], settings: PushSettings }>(resolve => {\n    const button = tab.querySelector('.button') as HTMLElement\n    button.addEventListener('click', () => {\n      const ids = Array.from(worldsDiv.querySelectorAll('input'))\n        .filter(input => input.checked)\n        .map(input => input.value)\n\n      if (ids.length < 1) {\n        ui.notify('Please select at least one world')\n        return\n      }\n\n      const settings: PushSettings = {\n        mode: (tab.querySelector('[name=mode]:checked') as HTMLInputElement).value as 'overwrite' | 'append',\n      }\n\n      resolve({ worlds: worlds.filter(({ id }) => ids.includes(id)), settings })\n    })\n  })\n}\n\n\nMessageBot.registerExtension('bibliofile/lists', function(ex) {\n  const ui = ex.bot.getExports('ui') as UIExtensionExports | undefined\n  if (!ui) return\n  const listId = 'bibliofile/lists'\n  ui.addTabGroup('Lists', listId)\n  ex.remove = () => ui.removeTabGroup(listId)\n\n  createUI('adminlist', ui.addTab('Adminlist', listId), ui)\n  createUI('modlist', ui.addTab('Modlist', listId), ui)\n  createUI('whitelist', ui.addTab('Whitelist', listId), ui)\n  createUI('blacklist', ui.addTab('Blacklist', listId), ui)\n})\n"],"names":["MessageBot"],"mappings":"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"}